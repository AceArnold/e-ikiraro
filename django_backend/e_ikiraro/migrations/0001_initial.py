# Generated by Django 5.2.7 on 2025-10-30 18:45

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending submission'), ('Submitted', 'Submitted'), ('Processing', 'Under Review'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the service', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Description of the service')),
                ('base_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Base fee for the service', max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='DriversLicenseApplication',
            fields=[
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='drivers_license_details', serialize=False, to='e_ikiraro.application')),
                ('license_type', models.CharField(choices=[('Motorcycle', 'Motorcycle'), ('Personal Car', 'Personal Car'), ('Commercial Vehicle', 'Commercial Vehicle')], max_length=50)),
                ('photo', models.FileField(upload_to='documents/license_photos/')),
                ('medical_certificate', models.FileField(upload_to='documents/medical_certificates/')),
                ('eye_test_certificate', models.FileField(upload_to='documents/eye_test_certificates/')),
                ('national_id', models.FileField(upload_to='documents/national_ids/')),
            ],
        ),
        migrations.CreateModel(
            name='NationalIDApplication',
            fields=[
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='national_id_details', serialize=False, to='e_ikiraro.application')),
                ('birth_certificate', models.FileField(upload_to='documents/birth_certificates/')),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PassportApplication',
            fields=[
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='passport_details', serialize=False, to='e_ikiraro.application')),
                ('passport_type', models.CharField(choices=[('Ordinary Passport', 'Ordinary Passport'), ('Official Passport', 'Official Passport'), ('Diplomatic Passport', 'Diplomatic Passport'), ('Emergency Travel Document', 'Approved')], max_length=500)),
                ('passport_photo', models.FileField(upload_to='documents/passport_photos/')),
                ('birth_certificate', models.FileField(upload_to='documents/birth_certificates/')),
                ('national_id', models.FileField(upload_to='documents/national_ids/')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='e_ikiraro.application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Mobile Money', 'Mobile Money'), ('Bank Transfer', 'Bank Transfer'), ('Credit Card', 'Credit Card')], max_length=50)),
                ('transaction_id', models.CharField(max_length=100)),
                ('provider_reference', models.CharField(max_length=100)),
                ('paid_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='e_ikiraro.application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='e_ikiraro.service'),
        ),
    ]
